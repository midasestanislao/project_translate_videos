from youtube_transcript_api import YouTubeTranscriptApi as yta
from urllib.parse import urlparse
from urllib.parse import parse_qs

url = "https://www.youtube.com/watch?v=PY_N1XdFp4w"
# Paso 1: Configuración del video de YouTube
parsed = urlparse(url)
video_id = parse_qs(parsed.query)["v"][0]
# video_id = "UTgnOwpafpw"


# Paso 2: Extraer la transcripción
# data = yta.get_transcript(video_id, languages=['es', 'en'])

# # Paso 3: Concatenar las líneas de la transcripción en un solo string
# transcript = ''
# for value in data:
#     transcript += value.get('text', '') + ' '

# # Paso 4: Guardar la transcripción en un archivo .txt
# ruta_transcript = "Desktop/Projecto_translate_videos/transcript/laos.txt"
# with open(ruta_transcript, "w", encoding='utf-8') as file:
#     file.write(transcript)

# # Paso 5: Leer el contenido del archivo .txt
# with open(ruta_transcript, 'r', encoding='utf-8') as file:
#     texto = file.read()

# # Paso 6: Inicializar el corrector gramatical
# parser = GingerIt()

# # Paso 7: Corregir el texto
# resultado = parser.parse(texto)
# texto_corregido = resultado['result']

# # Paso 8: Guardar el texto corregido en un nuevo archivo .txt
# ruta_corregida = "Desktop/Projecto_translate_videos/transcript/laos_corregido.txt"
# with open(ruta_corregida, 'w', encoding='utf-8') as file:
#     file.write(texto_corregido)

# print(f"El documento ha sido corregido y guardado como '{ruta_corregida}'.")
# //////////////////////////////////////////////////////////////////////////////////////////////////////

# transcript_list = yta.list_transcripts(video_id)

# for transcript in transcript_list:
#     # the Transcript object provides metadata
#     # properties
#     print(
#         transcript.video_id,
#         transcript.language,
#         transcript.language_code,
    
#         # whether it has been manually created or
#         # generated by YouTube
#         transcript.is_generated,
        
#         # whether this transcript can be translated
#         # or not
#         transcript.is_translatable,
        
#         # a list of languages the transcript can be
#         # translated to
#         transcript.translation_languages,

# /////////////////////////////////////////////////////
    # # fetch the actual transcript data
    # print(transcript.fetch())
    
    # # translating the transcript will return another
    # # transcript object
    # print(transcript.translate('en').fetch())
# ///////////////////////////////////////////////////////////
# importing modules
# from youtube_transcript_api import YouTubeTranscriptApi

# using the srt variable with the list of dictionaries
# obtained by the .get_transcript() function
srt = yta.get_transcript(video_id)

# creating or overwriting a file "subtitles.txt" with
# the info inside the context manager
with open("/mnt/c/Users/leoni/Desktop/Project_translate_videos/subtitles_text.txt", "w") as f:

        # iterating through each element of list srt
    for i in srt:
        # writing each element of srt on a new line
        f.write("{}\n".format(i))
        # f.write(i['text']) // No usar